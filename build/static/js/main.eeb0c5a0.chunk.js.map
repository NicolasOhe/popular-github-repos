{"version":3,"sources":["theme.js","components/Copyright.js","store/actions/repos.js","store/actions/actionTypes.js","components/Settings/DateFilter.js","components/Settings/LanguagesFilter.js","components/Settings/Settings.js","store/actions/stars.js","components/List/StarButton.js","components/List/ListEntry.js","components/List/List.js","components/TabPanel.js","components/App.js","store/reducers/stars.js","store/reducers/repos.js","store/reducers/index.js","index.js"],"names":["theme","createMuiTheme","props","MuiButtonBase","disableRipple","palette","primary","main","secondary","error","red","A400","background","default","Copyright","Typography","variant","color","align","Link","href","Date","getFullYear","setLoading","value","type","fetchPopularRepos","dispatch","getState","repos","selectedLanguages","selectedDate","formattedDate","toISOString","split","dateQuery","languagesQuery","length","map","language","encodeURIComponent","join","composedURL","fetch","then","res","json","data","setPopularRepos","items","catch","e","finally","useStyles","makeStyles","root","margin","LanguagesFilter","useDispatch","classes","useSelector","state","className","utils","DateFnsUtils","id","label","format","onChange","date","KeyboardButtonProps","formControl","spacing","minWidth","maxWidth","languages","sort","getStyles","name","fontWeight","indexOf","typography","fontWeightRegular","fontWeightMedium","useTheme","FormControl","InputLabel","Select","labelId","multiple","event","target","input","Input","MenuItem","key","style","grid","justifyContent","breakpoints","down","Settings","Box","Grid","container","setStarredInfos","setError","marginLeft","marginTop","width","flexShrink","display","StarButton","fullName","starred","stars","starsList","Button","onClick","preventDefault","includes","removeStar","removeStarInfo","addStar","register","info","updatedStarList","window","localStorage","setItem","JSON","stringify","toggleStar","outlined","star","listItem","border","marginBottom","link","textDecoration","title","chip","pointerEvents","verticalAlign","transform","itemContent","alignItems","flexDirection","itemDescription","flexGrow","ListEntry","infos","description","svn_url","full_name","stargazers_count","Header","component","Chip","Body","inline","ListItem","button","ListItemText","secondaryTypographyProps","noData","textAlign","progress","RepoList","loading","noDataMessage","CircularProgress","List","repoInfos","TabPanel","children","index","other","role","hidden","aria-labelledby","App","popularRepos","list","loadingRepos","starredInfos","starsInfoList","loadingStarred","useEffect","a","savedStarsString","getItem","savedStars","parse","err","console","requests","Promise","all","rawResponseArray","pendingResults","result","results","useState","currentTab","setCurrentTab","Container","my","gutterBottom","Tabs","newValue","aria-label","centered","Tab","wrapped","aria-controls","initialState","starsReducer","action","filter","el","now","popularReposReducer","reduce","acc","cur","combineReducers","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","ThemeProvider","CssBaseline","document","querySelector"],"mappings":"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","file":"static/js/main.eeb0c5a0.chunk.js","sourcesContent":["import { red } from '@material-ui/core/colors'\nimport { createMuiTheme } from '@material-ui/core/styles'\n\nconst theme = createMuiTheme({\n  props: {\n    MuiButtonBase: {\n      disableRipple: true,\n    },\n  },\n  palette: {\n    primary: {\n      main: '#556cd6',\n    },\n    secondary: {\n      main: '#ffd600',\n    },\n    error: {\n      main: red.A400,\n    },\n\n    background: {\n      default: '#fff',\n    },\n  },\n})\n\nexport default theme\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Link from '@material-ui/core/Link'\n\nexport default function Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://nicolascauet.me/\">\n        Nicolas C.\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  )\n}\n","import * as actions from './actionTypes'\n\nconst setPopularRepos = (data) => ({ type: actions.REPOS_SET, data })\nconst setLoading = (value) => ({ type: actions.REPOS_SET_LOADING, value })\nconst setError = (value) => ({ type: actions.REPOS_SET_ERROR, value })\n\nexport const setSelectedDate = (value) => ({\n  type: actions.REPOS_SET_SELECTED_DATE,\n  value,\n})\n\nexport const setSelectedLanguages = (value) => ({\n  type: actions.REPOS_SET_SELECTED_LANGUAGES,\n  value,\n})\n\nexport function fetchPopularRepos() {\n  return (dispatch, getState) => {\n    const { selectedLanguages, selectedDate } = getState().repos\n    // YYYY-MM-DD\n    const formattedDate = new Date(selectedDate).toISOString().split('T')[0]\n    const dateQuery = `created:>${formattedDate}`\n    const languagesQuery = selectedLanguages.length\n      ? selectedLanguages\n          .map((language) => `+language:${encodeURIComponent(language)}`)\n          .join('')\n      : ''\n    const composedURL = `https://api.github.com/search/repositories?q=${dateQuery}${languagesQuery}&sort=stars&order=desc&per_page=20 `\n\n    dispatch(setLoading(true))\n    fetch(composedURL)\n      .then((res) => res.json())\n      .then((data) => dispatch(setPopularRepos(data.items)))\n      .catch((e) => dispatch(setError(true)))\n      .finally(() => dispatch(setLoading(false)))\n  }\n}\n","// Repos\nexport const REPOS_ADD = 'REPOS_ADD'\nexport const REPOS_SET = 'REPOS_SET'\nexport const REPOS_SET_LOADING = 'REPOS_SET_LOADING'\nexport const REPOS_SET_ERROR = 'REPOS_SET_ERROR'\nexport const REPOS_SET_SELECTED_DATE = 'REPOS_SET_SELECTED_DATE'\nexport const REPOS_SET_SELECTED_LANGUAGES = 'REPOS_SET_SELECTED_LANGUAGES'\n\n// Stars\nexport const STARS_SET = 'STARS_SET'\nexport const STARS_ADD = 'STARS_ADD'\nexport const STARS_REMOVE = 'STARS_REMOVE'\nexport const STARS_SET_INFOS = 'STARS_SET_INFOS'\nexport const STARS_ADD_INFO = 'STARS_ADD_INFO'\nexport const STARS_REMOVE_INFO = 'STARS_REMOVE_INFO'\nexport const STARS_SET_LOADING = 'STARS_SET_LOADING'\nexport const STARS_SET_ERROR = 'STARS_SET_ERROR'\n","import React from 'react'\nimport DateFnsUtils from '@date-io/date-fns'\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardDatePicker,\n} from '@material-ui/pickers'\nimport 'date-fns'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { makeStyles } from '@material-ui/core/styles'\n\nimport { setSelectedDate, fetchPopularRepos } from '../../store/actions/repos'\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    margin: 0,\n  },\n}))\n\nexport default function LanguagesFilter() {\n  const dispatch = useDispatch()\n  const classes = useStyles()\n  const selectedDate = useSelector((state) => state.repos.selectedDate)\n\n  const handleDateChange = (date) => {\n    dispatch(setSelectedDate(date))\n    dispatch(fetchPopularRepos())\n  }\n\n  return (\n    <MuiPickersUtilsProvider className={classes.root} utils={DateFnsUtils}>\n      <KeyboardDatePicker\n        margin=\"normal\"\n        id=\"date-picker-dialog\"\n        label=\"Show most popular since:\"\n        format=\"MM/dd/yyyy\"\n        value={selectedDate}\n        onChange={handleDateChange}\n        KeyboardButtonProps={{\n          'aria-label': 'change date',\n        }}\n      />\n    </MuiPickersUtilsProvider>\n  )\n}\n","import React from 'react'\n\nimport { makeStyles, useTheme } from '@material-ui/core/styles'\nimport {\n  Input,\n  InputLabel,\n  MenuItem,\n  FormControl,\n  Select,\n} from '@material-ui/core'\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  setSelectedLanguages,\n  fetchPopularRepos,\n} from '../../store/actions/repos'\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(2, 0, 1, 0),\n    minWidth: 220,\n    maxWidth: 300,\n  },\n}))\n\n// TODO: fetch availble languages from some remote source\nconst languages = [\n  'TypeScript',\n  'JavaScript',\n  'C',\n  'C++',\n  'Python',\n  'Go',\n  'Rust',\n  'Kotlin',\n].sort()\n\nfunction getStyles(name, selectedLanguages, theme) {\n  return {\n    fontWeight:\n      selectedLanguages.indexOf(name) === -1\n        ? theme.typography.fontWeightRegular\n        : theme.typography.fontWeightMedium,\n  }\n}\n\nexport default function LanguagesFilter() {\n  const dispatch = useDispatch()\n\n  const selectedLanguages = useSelector(\n    (state) => state.repos.selectedLanguages\n  )\n  const classes = useStyles()\n  const theme = useTheme()\n\n  const handleLanguageChange = (event) => {\n    dispatch(setSelectedLanguages(event.target.value))\n    dispatch(fetchPopularRepos())\n  }\n\n  return (\n    <FormControl className={classes.formControl}>\n      <InputLabel id=\"languages-filter-label\">Languages filter</InputLabel>\n      <Select\n        labelId=\"languages-filter-label\"\n        id=\"languages-filter\"\n        multiple\n        value={selectedLanguages}\n        onChange={handleLanguageChange}\n        input={<Input />}\n        color=\"secondary\"\n      >\n        {languages.map((language) => (\n          <MenuItem\n            key={language}\n            value={language}\n            style={getStyles(language, selectedLanguages, theme)}\n          >\n            {language}\n          </MenuItem>\n        ))}\n      </Select>\n    </FormControl>\n  )\n}\n","import React from 'react'\nimport { Box, Grid } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\n\nimport DateFilter from './DateFilter'\nimport LanguagesFilter from './LanguagesFilter'\n\nconst useStyles = makeStyles((theme) => ({\n  grid: {\n    justifyContent: 'space-between',\n\n    [theme.breakpoints.down('xs')]: {\n      justifyContent: 'center',\n    },\n  },\n}))\n\nexport default function Settings() {\n  const classes = useStyles()\n  return (\n    <Box color=\"text.primary\">\n      <Grid container className={classes.grid}>\n        <DateFilter />\n        <LanguagesFilter />\n      </Grid>\n    </Box>\n  )\n}\n","import * as actions from './actionTypes'\n\nconst setStarred = (data) => ({ type: actions.STARS_SET, data })\nconst addStar = (fullName) => ({ type: actions.STARS_ADD, fullName })\nconst removeStar = (fullName) => ({ type: actions.STARS_REMOVE, fullName })\n\nconst setStarredInfos = (data) => ({ type: actions.STARS_SET_INFOS, data })\nconst addStarInfo = (info) => ({ type: actions.STARS_ADD_INFO, info })\nconst removeStarInfo = (fullName) => ({\n  type: actions.STARS_REMOVE_INFO,\n  fullName,\n})\n\nconst setLoading = (value) => ({ type: actions.STARS_SET_LOADING, value })\nconst setError = (value) => ({ type: actions.STARS_SET_ERROR, value })\n\nexport function initStars() {\n  return async (dispatch) => {\n    let savedStars\n    try {\n      const savedStarsString = window.localStorage.getItem('starred')\n      savedStars = JSON.parse(savedStarsString)\n      dispatch(setStarred(savedStars))\n    } catch (err) {\n      console.error(\n        'Error parsing the starred repos saved in local storage:',\n        err\n      )\n      dispatch(setError(true))\n    }\n\n    if (!savedStars) {\n      return\n    }\n    dispatch(setLoading(true))\n    const requests = savedStars.map((fullName) =>\n      fetch(`https://api.github.com/repos/${fullName}`)\n    )\n    try {\n      const rawResponseArray = await Promise.all(requests)\n      const pendingResults = rawResponseArray.map((result) => result.json())\n      const results = await Promise.all(pendingResults)\n      dispatch(setStarredInfos(results))\n    } catch (e) {\n      console.error(e)\n      dispatch(setError(true))\n    }\n    dispatch(setLoading(false))\n  }\n}\n\nexport const toggleStar = (fullName) => {\n  return (dispatch, getState) => {\n    const isRemove = getState().stars.starsList.includes(fullName)\n\n    if (isRemove) {\n      dispatch(removeStar(fullName))\n      dispatch(removeStarInfo(fullName))\n    } else {\n      dispatch(addStar(fullName))\n      const data = getState().repos.register[fullName]\n      dispatch(addStarInfo(data))\n    }\n    const updatedStarList = getState().stars.starsList\n    window.localStorage.setItem('starred', JSON.stringify(updatedStarList))\n  }\n}\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\n\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Button } from '@material-ui/core'\nimport StarIcon from '@material-ui/icons/Star'\nimport { toggleStar } from '../../store/actions/stars'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginLeft: '1rem',\n    marginTop: '1rem',\n    width: '8rem',\n    flexShrink: '0',\n    display: 'flex',\n    justifyContent: 'space-evenly',\n\n    [theme.breakpoints.down('xs')]: {\n      marginLeft: '0',\n    },\n  },\n}))\n\nexport default function StarButton({ fullName }) {\n  const dispatch = useDispatch()\n  const starred = useSelector((state) => state.stars.starsList)\n  const classes = useStyles()\n\n  const handleClick = (event) => {\n    event.preventDefault()\n    dispatch(toggleStar(fullName))\n  }\n\n  return (\n    <Button\n      className={classes.root}\n      variant=\"outlined\"\n      onClick={handleClick}\n      outlined\n    >\n      {starred.includes(fullName) ? 'Remove  ' : 'Add  '}\n      <StarIcon color=\"secondary\" className={classes.star} />\n    </Button>\n  )\n}\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport StarIcon from '@material-ui/icons/Star'\nimport { useSelector } from 'react-redux'\nimport { ListItem, ListItemText, Chip, Typography } from '@material-ui/core'\nimport StarButton from './StarButton'\n\nconst useStyles = makeStyles((theme) => ({\n  listItem: {\n    border: '1px solid lightgrey',\n    marginBottom: '1.5rem',\n  },\n  link: {\n    textDecoration: 'none',\n    width: '100%',\n  },\n  title: {\n    marginBottom: '1rem',\n  },\n  chip: {\n    marginLeft: '1rem',\n    pointerEvents: 'none',\n  },\n  star: {\n    verticalAlign: 'middle',\n    width: '1rem',\n    transform: 'translateY(-2px)',\n  },\n  itemContent: {\n    display: 'flex',\n    alignItems: 'flex-end',\n    [theme.breakpoints.down('xs')]: {\n      flexDirection: 'column',\n      alignItems: 'center',\n    },\n  },\n  itemDescription: {\n    flexGrow: '1',\n  },\n}))\n\nexport default function ListEntry(props) {\n  const {\n    infos: {\n      name,\n      language,\n      description,\n      svn_url,\n      full_name,\n      stargazers_count,\n    },\n  } = props\n  const starred = useSelector((state) => state.stars.starsList)\n  const classes = useStyles()\n\n  const Header = (\n    <>\n      <Typography\n        component=\"h5\"\n        variant=\"h5\"\n        className={classes.title}\n        color=\"textPrimary\"\n      >\n        <span>{name}</span>\n        <Chip\n          className={classes.chip}\n          variant=\"outlined\"\n          label={\n            <>\n              <span>\n                {stargazers_count + (starred.includes(full_name) ? 1 : 0)}\n              </span>\n              <StarIcon color=\"secondary\" className={classes.star} />\n            </>\n          }\n        />\n        {language && (\n          <Chip\n            component=\"span\"\n            variant=\"outlined\"\n            className={classes.chip}\n            label={<span>{language}</span>}\n          />\n        )}\n      </Typography>\n    </>\n  )\n\n  const Body = (\n    <>\n      <span className={classes.itemDescription}>\n        <Typography\n          component=\"span\"\n          variant=\"body2\"\n          className={classes.inline}\n          color=\"textPrimary\"\n        >\n          {description || 'No description.'}\n        </Typography>\n      </span>\n      <StarButton fullName={full_name} />\n    </>\n  )\n\n  return (\n    <ListItem button className={classes.listItem} component=\"li\">\n      <a href={svn_url} className={classes.link}>\n        <ListItemText\n          primary={Header}\n          secondaryTypographyProps={{ className: classes.itemContent }}\n          secondary={Body}\n        />\n      </a>\n    </ListItem>\n  )\n}\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { List, Typography, CircularProgress } from '@material-ui/core'\n\nimport ListEntry from './ListEntry'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  noData: {\n    marginTop: '2rem',\n    marginBottom: '1rem',\n    textAlign: 'center',\n  },\n  progress: {\n    display: 'block',\n    margin: '3rem auto',\n  },\n}))\n\nexport default function RepoList(props) {\n  const { data, loading, noDataMessage } = props\n  const classes = useStyles()\n\n  if (loading) {\n    return <CircularProgress className={classes.progress} />\n  }\n\n  const noData = data.length === 0\n  if (noData) {\n    return (\n      <Typography\n        component=\"p\"\n        variant=\"p\"\n        className={classes.noData}\n        color=\"textPrimary\"\n      >\n        {noDataMessage || 'No data.'}\n      </Typography>\n    )\n  }\n\n  return (\n    <List className={classes.root}>\n      {data.map((repoInfos) => (\n        <ListEntry infos={repoInfos} />\n      ))}\n    </List>\n  )\n}\n","import React from 'react'\n\nexport default function TabPanel(props) {\n  const { children, value, index, ...other } = props\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`wrapped-tabpanel-${index}`}\n      aria-labelledby={`wrapped-tab-${index}`}\n      {...other}\n    >\n      {children}\n    </div>\n  )\n}\n","import React, { useEffect, useState } from 'react'\nimport { Tabs, Tab, Box, Typography, Container } from '@material-ui/core'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport Copyright from './Copyright'\nimport Settings from './Settings/Settings'\nimport List from './List/List'\nimport TabPanel from './TabPanel'\n\nimport { fetchPopularRepos } from '../store/actions/repos'\nimport { initStars } from '../store/actions/stars'\n\nexport default function App() {\n  const dispatch = useDispatch()\n\n  const popularRepos = useSelector((state) => state.repos.list)\n  const loadingRepos = useSelector((state) => state.repos.loading)\n\n  const starredInfos = useSelector((state) => state.stars.starsInfoList)\n  const loadingStarred = useSelector((state) => state.stars.loading)\n\n  useEffect(() => {\n    dispatch(fetchPopularRepos())\n    dispatch(initStars())\n  }, [dispatch])\n\n  const [currentTab, setCurrentTab] = useState('trending')\n\n  const handleTabChange = (event, newValue) => {\n    setCurrentTab(newValue)\n  }\n\n  return (\n    <Container maxWidth=\"md\">\n      <Box my={4}>\n        <Typography variant=\"h3\" component=\"h1\" gutterBottom align=\"center\">\n          Trending GitHub repositories\n        </Typography>\n\n        <Tabs\n          value={currentTab}\n          onChange={handleTabChange}\n          aria-label=\"wrapped label tabs example\"\n          centered\n        >\n          <Tab\n            value=\"trending\"\n            label=\"Popular\"\n            wrapped\n            id=\"wrapped-tab-trending\"\n            aria-controls=\"wrapped-tabpanel-trending\"\n          />\n          <Tab\n            value=\"favorites\"\n            label=\"Your stars\"\n            id=\"wrapped-tab-favorites\"\n            aria-controls=\"wrapped-tabpanel-favorites\"\n          />\n        </Tabs>\n\n        <TabPanel value={currentTab} index=\"trending\">\n          <Settings />\n          <List data={popularRepos} loading={loadingRepos} />\n        </TabPanel>\n        <TabPanel value={currentTab} index=\"favorites\">\n          <List\n            data={starredInfos}\n            loading={loadingStarred}\n            noDataMessage=\"You haven't starred any repo yet.\"\n          />\n        </TabPanel>\n        <Copyright />\n      </Box>\n    </Container>\n  )\n}\n","import * as actions from '../actions/actionTypes'\n\nconst initialState = {\n  starsList: [],\n  starsInfoList: [],\n  loading: false,\n  error: false,\n}\n\nconst starsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actions.STARS_SET:\n      return { ...state, starsList: [...action.data] }\n    case actions.STARS_ADD:\n      return { ...state, starsList: [...state.starsList, action.fullName] }\n    case actions.STARS_REMOVE:\n      return {\n        ...state,\n        starsList: state.starsList.filter((el) => el !== action.fullName),\n      }\n    case actions.STARS_SET_INFOS:\n      return {\n        ...state,\n        starsInfoList: [...action.data],\n      }\n    case actions.STARS_ADD_INFO:\n      return { ...state, starsInfoList: [...state.starsInfoList, action.info] }\n    case actions.STARS_REMOVE_INFO:\n      return {\n        ...state,\n        starsInfoList: state.starsInfoList.filter(\n          (el) => el.full_name !== action.fullName\n        ),\n      }\n    case actions.STARS_SET_LOADING:\n      return { ...state, loading: action.value }\n    case actions.STARS_SET_ERROR:\n      return { ...state, error: action.value }\n    default:\n      return state\n  }\n}\n\nexport default starsReducer\n","import * as actions from '../actions/actionTypes'\n\nconst oneWeekAgo = new Date(Date.now() - 7 * 24 * 60 * 60 * 1000)\n\nconst initialState = {\n  list: [],\n  register: {},\n  loading: false,\n  error: false,\n  selectedDate: oneWeekAgo,\n  selectedLanguages: [],\n}\n\nconst popularReposReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actions.REPOS_ADD:\n      return { ...state, list: [...state.list, ...action.data] }\n    case actions.REPOS_SET:\n      return {\n        ...state,\n        list: [...action.data],\n        register: action.data.reduce((acc, cur) => {\n          acc[cur.full_name] = cur\n          return acc\n        }, {}),\n      }\n    case actions.REPOS_SET_LOADING:\n      return { ...state, loading: action.value }\n    case actions.REPOS_SET_ERROR:\n      return { ...state, error: action.value }\n    case actions.REPOS_SET_SELECTED_DATE:\n      return { ...state, selectedDate: action.value }\n    case actions.REPOS_SET_SELECTED_LANGUAGES:\n      return { ...state, selectedLanguages: action.value }\n    default:\n      return state\n  }\n}\n\nexport default popularReposReducer\n","import { combineReducers } from 'redux'\nimport stars from './stars'\nimport repos from './repos'\n\nexport default combineReducers({\n  repos,\n  stars,\n})\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport { ThemeProvider } from '@material-ui/core/styles'\nimport theme from './theme'\nimport { Provider as ReduxProvider } from 'react-redux'\nimport { createStore, applyMiddleware } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport thunk from 'redux-thunk'\n\nimport App from './components/App'\nimport rootReducer from './store/reducers'\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(thunk))\n)\n\nReactDOM.render(\n  <ReduxProvider store={store}>\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <App />\n    </ThemeProvider>\n  </ReduxProvider>,\n  document.querySelector('#root')\n)\n"],"sourceRoot":""}